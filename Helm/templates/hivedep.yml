apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "true"
  labels:
    app: hivebox
  name: hivebox
spec:
  replicas: {{.Values.replicas }}
  selector:
    matchLabels:
      app: hivebox
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "true"
      labels:
        app: hivebox
    spec:
      containers:
      - image: ghcr.io/sabryp3/hivebox:latest
        imagePullPolicy: Always
        name: hivebox
        ports:
        - containerPort: 8000
        env:
        - name: REDIS_URL
          value: "redis://valkey-svc:6379" #refering the chache service
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      imagePullSecrets:
        - name: github-sec
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
